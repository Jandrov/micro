Turbo Assembler	 Version 2.0	    03/23/18 17:02:14	    Page 1
labs2a.asm



      1				     ;**************************************************************************
      2				     ; MICROPROCESSOR-BASED SYSTEMS
      3				     ; LAB SESSION 2
      4				     ; FILE: labs2a.asm
      5				     ; AUTHORS:	Emilio Cuesta Fernandez	- Alejandro Sanchez Sanz
      6				     ; COUPLE NUMBER: 8
      7				     ; GROUP: 2351
      8				     ;**************************************************************************
      9
     10				     ; DATA SEGMENT DEFINITION
     11	0000			     DATOS SEGMENT
     12	0000  01 00 00 00 01 01	00	     GMATRIX DB	1,0,0,0,1,1,0	 ; Generation matrix
     13	0007  00 01 00 00 01 00	01			     DB	0,1,0,0,1,0,1
     14	000E  00 00 01 00 00 01	01			     DB	0,0,1,0,0,1,1
     15	0015  00 00 00 01 01 01	01			     DB	0,0,0,1,1,1,1
     16	001C  01 00 01 01		     INPUT DB 1,0,1,1			     ; 4-bits binary chain
     17	0020  04			     ROWS DB 4					     ; Number of rows
     18	0021  07			     COLS DB 7					     ; Number of columns
     19	0022  07*(00)			     RESULT DB 7     dup (0)		     ; Variable	where the result is stored
     20	0029  02			     MODUL DB 2
     21	002A			     DATOS ENDS
     22				     ;**************************************************************************
     23				     ; STACK SEGMENT DEFINITION
     24	0000			     PILA SEGMENT STACK	"STACK"
     25	0000  40*(00)			     DB	40h DUP	(0) ; initialization example, 64 bytes set to 0
     26	0040			     PILA ENDS
     27				     ;**************************************************************************
     28				     ; CODE SEGMENT DEFINITION
     29	0000			     CODE SEGMENT
     30				     ASSUME CS:	CODE, DS: DATOS, SS: PILA
     31				     ; BEGINNING OF THE	MAIN PROCEDURE
     32	0000			     INICIO PROC
     33					     ; INITIALIZE THE SEGMENT REGISTERS
     34	0000  B8 0000s			     MOV AX, DATOS
     35	0003  8E D8			     MOV DS, AX
     36
     37					     ; PROGRAM START
     38
     39					     ; We load the 4-bits binary chain into DX:BX
     40	0005  8B 16 001Cr		     MOV DX, WORD PTR INPUT
     41	0009  8B 1E 001Er		     MOV BX, WORD PTR INPUT[2]
     42
     43					     ; We implement the	function to compute the	parity bits in an automatic way
     44	000D				     PARITY PROC
     45	000D  BD 0000				     MOV BP, 0 ; We initialize the loop	counter
     46
     47	0010  A0 0000r		     MULT:   MOV AL, GMATRIX[0][0]
     48	0013  F6 E2				     MUL DL
     49	0015  F6 36 0029r			     DIV MODUL
     50	0019  3E: 00 A6	0022r			     ADD RESULT[BP], AH
     51	001E  3E: 8A				     MOV AL, GMATRIX[1][7*BP]
**Error** labs2a.asm(51) Illegal indexing mode
     52	0020  F6 E2				     MUL DL
     53	0022  F6 36 0029r			     DIV MODUL
     54	0026  3E: 00 A6	0022r			     ADD RESULT[BP], AH
     55	002B  3E: 8A				     MOV AL, GMATRIX[2][7*BP]
**Error** labs2a.asm(55) Illegal indexing mode
Turbo Assembler	 Version 2.0	    03/23/18 17:02:14	    Page 2
labs2a.asm



     56	002D  F6 E2				     MUL DL
     57	002F  F6 36 0029r			     DIV MODUL
     58	0033  3E: 00 A6	0022r			     ADD RESULT[BP], AH
     59	0038  3E: 8A				     MOV AL, GMATRIX[3][7*BP]
**Error** labs2a.asm(59) Illegal indexing mode
     60	003A  F6 E2				     MUL DL
     61	003C  F6 36 0029r			     DIV MODUL
     62	0040  3E: 00 A6	0022r			     ADD RESULT[BP], AH
     63
     64	0045  45				     INC BP  ; We increase the loop counter
     65	0046  3B 2E 0021r			     CMP BP, WORD PTR COLS
     66	004A  75 C4				     JNE MULT
     67
     68	004C  B8 0000s				     MOV AX, SEG RESULT
     69	004F  BA 0022r				     MOV DX, OFFSET RESULT
     70
     71	0052				     ENDP PARITY
     72
     73
     74					     ; We print	the string
     75	0052  CD 21			     INT 21h
     76
     77					     ; PROGRAM END
     78	0054  B8 4C00			     MOV AX, 4C00h
     79	0057  CD 21			     INT 21h
     80	0059				     INICIO ENDP
     81				     ; END OF CODE SEGMENT
     82	0059			     CODE ENDS
     83				     ; END OF PROGRAM. OBS: INCLUDES THE ENTRY OR THE FIRST PROCEDURE (i.e. “INICIO”)
     84				     END INICIO
Turbo Assembler	 Version 2.0	    03/23/18 17:02:14	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/23/18"
??FILENAME			  Text	 "labs2a  "
??TIME				  Text	 "17:02:14"
??VERSION			  Number 0200
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 LABS2A
@WORDSIZE			  Text	 2
COLS				  Byte	 DATOS:0021
GMATRIX				  Byte	 DATOS:0000
INICIO				  Near	 CODE:0000
INPUT				  Byte	 DATOS:001C
MODUL				  Byte	 DATOS:0029
MULT				  Near	 CODE:0010
PARITY				  Near	 CODE:000D
RESULT				  Byte	 DATOS:0022
ROWS				  Byte	 DATOS:0020

Groups & Segments		  Bit Size Align  Combine Class

CODE				  16  0059 Para	  none
DATOS				  16  002A Para	  none
PILA				  16  0040 Para	  Stack	  STACK
Turbo Assembler	 Version 2.0	    03/23/18 17:02:14	    Page 4
Error Summary



**Error** labs2a.asm(51) Illegal indexing mode
**Error** labs2a.asm(55) Illegal indexing mode
**Error** labs2a.asm(59) Illegal indexing mode
