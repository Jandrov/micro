Turbo Assembler	 Version 2.0	    04/27/18 26:06:08	    Page 1
p4a.asm



      1				     ;**************************************************************************
      2				     ; MICROPROCESSOR-BASED SYSTEMS
      3				     ; LAB SESSION 4
      4				     ; FILE: p4a.asm
      5				     ; AUTHORS:	Emilio Cuesta Fernandez	- Alejandro Sanchez Sanz
      6				     ; COUPLE NUMBER: 8
      7				     ; GROUP: 2351
      8				     ;**************************************************************************
      9
     10
     11
     12				     ;**************************************************************************
     13				     ; CODE SEGMENT DEFINITION
     14	0000			     CODE SEGMENT
     15					     ASSUME CS:	CODE
     16					     ; First assembly instruction must be after	the 256	bytes of PSP, so this is
     17					     ; necessary to generate a .COM file
     18					     ORG 256
     19
     20	0100  54 68 65 20 64 72	69+	     STATUSPRINT1 DB "The driver is currently INSTALLED", 13, 10, '$'
     21	      76 65 72 20 69 73	20+
     22	      63 75 72 72 65 6E	74+
     23	      6C 79 20 49 4E 53	54+
     24	      41 4C 4C 45 44 0D	0A+
     25	      24
     26	0124  54 68 65 20 64 72	69+	     STATUSPRINT2 DB "The driver is currently UNINSTALLED", 13,	10, '$'
     27	      76 65 72 20 69 73	20+
     28	      63 75 72 72 65 6E	74+
     29	      6C 79 20 55 4E 49	4E+
     30	      53 54 41 4C 4C 45	44+
     31	      0D 0A 24
     32	014A  41 55 54 48 4F 52	53+	     AUTHORS DB	"AUTHORS:", 13,	10, "GROUP 2351, TEAM 8", 13, 10, "Emilio Cuesta", 13, 10,  +
     33	      3A 0D 0A 47 52 4F	55+  "Alejandro	Sanchez", 13, 10 , '$'
     34	      50 20 32 33 35 31	2C+
     35	      20 54 45 41 4D 20	38+
     36	      0D 0A 45 6D 69 6C	69+
     37	      6F 20 43 75 65 73	74+
     38	      61 0D 0A 41 6C 65	6A+
     39	      61 6E 64 72 6F 20	53+
     40	      61 6E 63 68 65 7A	0D+
     41	      0A 24
     42
     43				     ; BEGINNING OF THE	MAIN PROCEDURE
     44	018B			     INICIO:
     45					     ; Check input parameters
     46	018B  8A 0E 0080		     MOV CL, DS:[80h]	     ; Load the	size of	the parameters in the command line
     47					     ; No parameters
     48	018F  80 F9 00			     CMP CL, 0
     49	0192  74 21			     JE	STATUS
     50
     51					     ; If there	is a parameter,	it must	be 3 bytes long	(space + / + I or space	+ / + U)
     52	0194  80 F9 03			     CMP CL, 3
     53	0197  75 19			     JNE ERROR
     54	0199  8B 0E 0082		     MOV CX, DS:[82h]
     55	019D  80 F9 2F			     CMP CL, '/'
     56	01A0  75 10			     JNE ERROR
     57					     ; /I as parameter
Turbo Assembler	 Version 2.0	    04/27/18 26:06:08	    Page 2
p4a.asm



     58	01A2  80 FD 49			     CMP CH, 'I'
     59	01A5  74 00			     JE	INSTALLER
**Error** p4a.asm(40) Relative jump out	of range by 002Eh bytes
     60					     ; /U as parameter
     61	01A7  80 FD 55			     CMP CH, 'U'
     62	01AA  75 06			     JNE ERROR
     63	01AC  E8 00D3			     CALL UNINSTALLER
     64	01AF  E9 011E			     JMP FINAL
     65
     66					     ; Reaching	here means input parameters are	wrong
     67	01B2			     ERROR:
     68					     ; Shows this message when there has been an error introducing the parameters
     69	01B2  E9 011B			     JMP FINAL
     70
     71	01B5			     STATUS:
     72
     73
     74	01B5  B8 0000			     MOV AX, 0
     75	01B8  8E C0			     MOV ES, AX
     76	01BA  BB 01EFr			     MOV BX, OFFSET CAESAR
     77	01BD  8C C8			     MOV AX, CS
     78	01BF  FA			     CLI
     79					     ; We have to check	if there is a different	driver already installed in that position
     80	01C0  26: 8B 3E	0154		     MOV DI, ES:[ 55h*4	]
     81	01C5  26: 8B 36	0156		     MOV SI, ES:[ 55h*4	+2 ]
     82					     ; We check	if the driver that was installed is exactly our	driver
     83	01CA  FB			     STI
     84
     85	01CB  3B FB			     CMP DI, BX
     86	01CD  75 0E			     JNE UNINS
     87	01CF  3B F0			     CMP SI, AX
     88	01D1  75 0A			     JNE UNINS
     89
     90	01D3  BA 0100r			     MOV DX, OFFSET STATUSPRINT1
     91	01D6  B4 09			     MOV AH, 9
     92	01D8  CD 21			     INT 21H
     93	01DA  EB 08 90			     JMP AUTH
     94
     95	01DD			     UNINS:
     96
     97	01DD  BA 0124r			     MOV DX, OFFSET STATUSPRINT2
     98	01E0  B4 09			     MOV AH, 9
     99	01E2  CD 21			     INT 21H
    100
    101	01E4			     AUTH:
    102
    103	01E4  BA 014Ar			     MOV DX, OFFSET AUTHORS
    104	01E7  CD 21			     INT 21H
    105
    106					     ; it shall	show the installation status of	the driver (installed/uninstalled), the	team+
    107				     number and	the names of the programmers
    108	01E9  E9 00E4			     JMP FINAL
    109
    110					     ; GLOBAL VARIABLES
    111	01EC  0B			     CODE_NUMBER DB 11	     ; Codification number. We are team	8, so it is 8+3=11
    112	01ED  7E			     MAX_VALUE DB 126	     ; Maximum ASCII value we accept (~), in decimal
    113	01EE  20			     MIN_VALUE DB 32	     ; Minimum ASCII value we accept (space), in decimal
Turbo Assembler	 Version 2.0	    04/27/18 26:06:08	    Page 3
p4a.asm



    114
    115	01EF				     CAESAR PROC FAR ; INTERRUPT SERVICE ROUTINE
    116						     ; SAVE MODIFIED REGISTERS
    117	01EF  56 53 50				     PUSH SI BX	AX
    118						     ; ROUTINE INSTRUCTIONS
    119						     ; We know the string is pointed by	DS:DX
    120	01F2  BE 0000				     MOV SI, 0		     ; Initialize the index
    121	01F5  8B DA				     MOV BX, DX
    122						     ; We have to check	AH
    123	01F7  80 FC 12				     CMP AH, 12h     ; Encrypt and print
    124	01FA  74 08				     JE	ENCRYPT
    125	01FC  80 FC 13				     CMP AH, 13h     ; Decrypt and print
    126	01FF  74 1C				     JE	DECRYPT
    127	0201  EB 4D 90				     JMP FIN
    128
    129
    130	0204				     ENCRYPT:
    131	0204  8A 00				     MOV AL, DS:[BX][SI]
    132	0206  3C 24				     CMP AL, '$'
    133	0208  74 42				     JE	PRINT
    134	020A  2E: 02 06	01ECr			     ADD AL, CODE_NUMBER
    135	020F  8A E0				     MOV AH, AL
    136	0211  2E: 2A 26	01EDr			     SUB AH, MAX_VALUE
    137	0216  7F 1E				     JG	OVERFLOW
    138	0218				     BACK_ENC:
    139	0218  88 00				     MOV DS:[BX][SI], AL
    140	021A  46				     INC SI
    141	021B  EB E7				     JMP ENCRYPT
    142
    143	021D				     DECRYPT:
    144	021D  8A 00				     MOV AL, DS:[BX][SI]
    145	021F  3C 24				     CMP AL, '$'
    146	0221  74 29				     JE	PRINT
    147	0223  2E: 2A 06	01ECr			     SUB AL, CODE_NUMBER
    148	0228  8A E0				     MOV AH, AL
    149	022A  2E: 2A 26	01EEr			     SUB AH, MIN_VALUE
    150	022F  7C 10				     JL	UNDERFLOW
    151	0231				     BACK_DEC:
    152	0231  88 00				     MOV DS:[BX][SI], AL
    153	0233  46				     INC SI
    154	0234  EB E7				     JMP DECRYPT
    155
    156	0236				     OVERFLOW:
    157	0236  2E: 02 26	01EEr			     ADD AH, MIN_VALUE
    158	023B  FE CC				     DEC AH
    159	023D  8A C4				     MOV AL, AH
    160	023F  EB D7				     JMP BACK_ENC
    161
    162	0241				     UNDERFLOW:
    163	0241  2E: 02 26	01EDr			     ADD AH, MAX_VALUE
    164	0246  FE C4				     INC AH
    165	0248  8A C4				     MOV AL, AH
    166	024A  EB E5				     JMP BACK_DEC
    167
    168	024C				     PRINT:
    169
    170	024C  B4 09				     MOV AH, 09h
Turbo Assembler	 Version 2.0	    04/27/18 26:06:08	    Page 4
p4a.asm



    171	024E  CD 21				     INT 21h		     ; Print the string	after processing it. Offset is	    +
    172				     already in	DX
    173
    174
    175						     ; RESTORE MODIFIED	REGISTERS
    176	0250				     FIN:
    177	0250  58 5B 5E				     POP AX BX SI
    178	0253  CF				     IRET
    179	0254				     CAESAR ENDP
    180
    181	0254				     INSTALLER PROC
    182	0254  B8 0000				     MOV AX, 0
    183	0257  8E C0				     MOV ES, AX
    184	0259  BB 01EFr				     MOV BX, OFFSET CAESAR
    185	025C  8C C8				     MOV AX, CS
    186	025E  FA				     CLI
    187						     ; We have to check	if there was a different driver	already	installed in that   +
    188				     position
    189	025F  26: 8B 3E	0154			     MOV DI, ES:[ 55h*4	]
    190	0264  26: 8B 36	0156			     MOV SI, ES:[ 55h*4	+2 ]
    191						     ; We first	check if there was no driver installed at all
    192	0269  83 FF 00				     CMP DI, 0
    193	026C  75 4D				     JNE OUR_DRIVER
    194	026E  83 FE 00				     CMP SI, 0
    195	0271  75 53				     JNE DRIVER_EXISTS
    196
    197	0273				     INSTALL:
    198	0273  26: 89 1E	0154			     MOV ES:[ 55h*4 ], BX
    199	0278  26: A3 0156			     MOV ES:[ 55h*4+2 ], AX
    200	027C  FB				     STI
    201	027D  BA 0254r				     MOV DX, OFFSET INSTALLER
    202	0280  CD 27				     INT 27H ; TERMINATE AND STAY RESIDENT
    203						     ; PSP, VARIABLES, CAESAR ROUTINE.
    204	0282				     INSTALLER ENDP
    205
    206
    207	0282				     UNINSTALLER PROC ;	UNINSTALL CAESAR OF INT	55H
    208	0282  50 53 51 1E 06 57	56		     PUSH AX BX	CX DS ES DI SI
    209	0289  B9 0000				     MOV CX, 0
    210	028C  8E D9				     MOV DS, CX						     ; SEGMENT OF INTERRUPT +
    211				     VECTORS
    212	028E  8B 36 0156			     MOV SI, DS:[ 55h*4+2 ]		     ; READ CAESAR SEGMENT
    213	0292  8B 3E 0154			     MOV DI, DS:[ 55h*4	]		     ; READ CAESAR OFFSET
    214						     ; We first	check if there was no driver installed at all
    215	0296  83 FF 00				     CMP DI, 0
    216	0299  74 30				     JE	NO_DRIVER
    217
    218	029B				     UNINSTALL:
    219	029B  8E C6				     MOV ES, SI
    220	029D  26: 8B 1E	002C			     MOV BX, ES:[ 2Ch ]				     ; READ SEGMENT OF ENVIRONMENT  +
    221				     FROM CAESAR’S PSP.
    222	02A2  B4 49				     MOV AH, 49h
    223	02A4  CD 21				     INT 21h						     ; RELEASE CAESAR	    +
    224				     SEGMENT (ES)
    225	02A6  8E C3				     MOV ES, BX
    226	02A8  CD 21				     INT 21h						     ; RELEASE SEGMENT OF   +
    227				     ENVIRONMENT VARIABLES OF CAESAR
Turbo Assembler	 Version 2.0	    04/27/18 26:06:08	    Page 5
p4a.asm



    228						     ; SET VECTOR OF INTERRUPT 55H TO ZERO
    229	02AA  FA				     CLI
    230	02AB  89 0E 0154			     MOV DS:[ 55H*4 ], CX		     ; CX = 0
    231	02AF  89 0E 0156			     MOV DS:[ 55H*4+2 ], CX
    232	02B3  FB				     STI
    233	02B4  5E 5F 07 1F 59 5B	58		     POP SI DI ES DS CX	BX AX
    234	02BB				     UNINSTALLER ENDP
    235
    236	02BB				     OUR_DRIVER:
    237						     ; We check	if the driver that was installed is exactly our	driver
    238	02BB  3B FB				     CMP DI, BX
    239	02BD  75 07				     JNE DRIVER_EXISTS
    240	02BF  3B F0				     CMP SI, AX
    241	02C1  75 03				     JNE DRIVER_EXISTS
    242						     ; AQUI SE IMPRIMIRIA EL MENSAJE DE	QUE YA ESTA INSTALADA NUESTRO DRIVER
    243	02C3  EB 0B 90				     JMP FINAL
    244
    245	02C6				     DRIVER_EXISTS:
    246
    247						     ; Aqui imprimimos pregunta	para ver si instalar o no encima de la otra
    248	02C6  EB AB				     JMP INSTALL
    249
    250	02C8  EB 06 90				     JMP FINAL
    251
    252	02CB				     NO_DRIVER:
    253	02CB  83 FE 00				     CMP SI, 0
    254	02CE  75 CB				     JNE UNINSTALL
    255						     ; AQUI SE IMPRIMIRIA EL MENSAJE DE	QUE NO HAY INSTALADO NADA ASI QUE NO	    +
    256				     DESINSTALAMOS
    257
    258
    259
    260	02D0				     FINAL:
    261						     ; NOT SURE	IF IT IS NECESSARY
    262	02D0  B8 4C00				     MOV AX, 4C00h
    263	02D3  CD 21				     INT 21h
    264
    265				     ; END OF CODE SEGMENT
    266	02D5			     CODE ENDS
    267				     ; END OF PROGRAM. OBS: INCLUDES THE ENTRY OR THE FIRST PROCEDURE (i.e. “INICIO”)
    268				     END INICIO
Turbo Assembler	 Version 2.0	    04/27/18 26:06:08	    Page 6
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/27/18"
??FILENAME			  Text	 "p4a	  "
??TIME				  Text	 "26:06:08"
??VERSION			  Number 0200
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 P4A
@WORDSIZE			  Text	 2
AUTH				  Near	 CODE:01E4
AUTHORS				  Byte	 CODE:014A
BACK_DEC			  Near	 CODE:0231
BACK_ENC			  Near	 CODE:0218
CAESAR				  Far	 CODE:01EF
CODE_NUMBER			  Byte	 CODE:01EC
DECRYPT				  Near	 CODE:021D
DRIVER_EXISTS			  Near	 CODE:02C6
ENCRYPT				  Near	 CODE:0204
ERROR				  Near	 CODE:01B2
FIN				  Near	 CODE:0250
FINAL				  Near	 CODE:02D0
INICIO				  Near	 CODE:018B
INSTALL				  Near	 CODE:0273
INSTALLER			  Near	 CODE:0254
MAX_VALUE			  Byte	 CODE:01ED
MIN_VALUE			  Byte	 CODE:01EE
NO_DRIVER			  Near	 CODE:02CB
OUR_DRIVER			  Near	 CODE:02BB
OVERFLOW			  Near	 CODE:0236
PRINT				  Near	 CODE:024C
STATUS				  Near	 CODE:01B5
STATUSPRINT1			  Byte	 CODE:0100
STATUSPRINT2			  Byte	 CODE:0124
UNDERFLOW			  Near	 CODE:0241
UNINS				  Near	 CODE:01DD
UNINSTALL			  Near	 CODE:029B
UNINSTALLER			  Near	 CODE:0282

Groups & Segments		  Bit Size Align  Combine Class

CODE				  16  02D5 Para	  none
Turbo Assembler	 Version 2.0	    04/27/18 26:06:08	    Page 7
Error Summary



**Error** p4a.asm(40) Relative jump out	of range by 002Eh bytes
