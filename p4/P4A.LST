Turbo Assembler	 Version 2.0	    04/30/18 03:32:54	    Page 1
p4a.asm



      1				     ;**************************************************************************
      2				     ; MICROPROCESSOR-BASED SYSTEMS
      3				     ; LAB SESSION 4
      4				     ; FILE: p4a.asm
      5				     ; AUTHORS:	Emilio Cuesta Fernandez	- Alejandro Sanchez Sanz
      6				     ; COUPLE NUMBER: 8
      7				     ; GROUP: 2351
      8				     ;**************************************************************************
      9
     10
     11
     12				     ;**************************************************************************
     13				     ; CODE SEGMENT DEFINITION
     14	0000			     CODE SEGMENT
     15					     ASSUME CS:	CODE
     16					     ; First assembly instruction must be after	the 256	bytes of PSP, so this is
     17					     ; necessary to generate a .COM file
     18
     19
     20					     ORG 256
     21
     22
     23				     ; BEGINNING OF THE	MAIN PROCEDURE
     24	0100			     INICIO:
     25
     26	0100  54 68 65 20 64 72	69+	     STATUSPRINT1 DB "The driver is currently INSTALLED", 13, 10, '$'
     27	      76 65 72 20 69 73	20+
     28	      63 75 72 72 65 6E	74+
     29	      6C 79 20 49 4E 53	54+
     30	      41 4C 4C 45 44 0D	0A+
     31	      24
     32	0124  54 68 65 20 64 72	69+	     STATUSPRINT2 DB "The driver is currently UNINSTALLED", 13,	10, '$'
     33	      76 65 72 20 69 73	20+
     34	      63 75 72 72 65 6E	74+
     35	      6C 79 20 55 4E 49	4E+
     36	      53 54 41 4C 4C 45	44+
     37	      0D 0A 24
     38	014A  41 55 54 48 4F 52	53+	     AUTHORS DB	"AUTHORS:", 13,	10, "GROUP 2351, TEAM 8", 13, 10, "Emilio Cuesta", 13, 10,  +
     39	      3A 0D 0A 47 52 4F	55+  "Alejandro	Sanchez", 13, 10 , '$'
     40	      50 20 32 33 35 31	2C+
     41	      20 54 45 41 4D 20	38+
     42	      0D 0A 45 6D 69 6C	69+
     43	      6F 20 43 75 65 73	74+
     44	      61 0D 0A 41 6C 65	6A+
     45	      61 6E 64 72 6F 20	53+
     46	      61 6E 63 68 65 7A	0D+
     47	      0A 24
     48
     49					     ; Check input parameters
     50	018B  8A 0E 0080		     MOV CL, DS:[80h]	     ; Load the	size of	the parameters in the command line
     51					     ; No parameters
     52	018F  80 F9 00			     CMP CL, 0
     53	0192  74 24			     JE	STATUS
     54
     55					     ; If there	is a parameter,	it must	be 3 bytes long	(space + / + I or space	+ / + U)
     56	0194  80 F9 03			     CMP CL, 3
     57	0197  75 1C			     JNE ERROR
Turbo Assembler	 Version 2.0	    04/30/18 03:32:54	    Page 2
p4a.asm



     58	0199  8B 0E 0082		     MOV CX, DS:[82h]
     59	019D  80 F9 2F			     CMP CL, '/'
     60	01A0  75 13			     JNE ERROR
     61					     ; /I as parameter
     62	01A2  80 FD 49			     CMP CH, 'I'
     63	01A5  74 0B			     JE	AUXINSJUMP
     64					     ; /U as parameter
     65	01A7  80 FD 55			     CMP CH, 'U'
     66	01AA  75 09			     JNE ERROR
     67	01AC  E8 00D5			     CALL UNINSTALLER
     68	01AF  E9 0120			     JMP FINAL
     69
     70	01B2			     AUXINSJUMP:
     71
     72	01B2  E9 00A1			     JMP INSTALLER
     73
     74
     75					     ; Reaching	here means input parameters are	wrong
     76	01B5			     ERROR:
     77					     ; Shows this message when there has been an error introducing the parameters
     78	01B5  E9 011A			     JMP FINAL
     79
     80	01B8			     STATUS:
     81
     82
     83
     84	01B8  B8 0000			     MOV AX, 0
     85	01BB  8E C0			     MOV ES, AX
     86					     ;;PUSH DS
     87
     88	01BD  B9 0000			     MOV CX, 0
     89	01C0  B8 2351			     MOV AX, 2351h
     90	01C3  CD 55			     INT 55h
     91					     ;;POP DS
     92
     93	01C5  83 F9 01			     CMP CX, 1
     94	01C8  75 0A			     JNE UNINS
     95
     96
     97	01CA  BA 0100r			     MOV DX, OFFSET STATUSPRINT1
     98	01CD  B4 09			     MOV AH, 9
     99	01CF  CD 21			     INT 21H
    100	01D1  EB 08 90			     JMP AUTH
    101
    102	01D4			     UNINS:
    103
    104	01D4  BA 0124r			     MOV DX, OFFSET STATUSPRINT2
    105	01D7  B4 09			     MOV AH, 9
    106	01D9  CD 21			     INT 21H
    107
    108	01DB			     AUTH:
    109
    110	01DB  BA 014Ar			     MOV DX, OFFSET AUTHORS
    111	01DE  CD 21			     INT 21H
    112
    113					     ; it shall	show the installation status of	the driver (installed/uninstalled), the	team+
    114				     number and	the names of the programmers
Turbo Assembler	 Version 2.0	    04/30/18 03:32:54	    Page 3
p4a.asm



    115	01E0  E9 00EF			     JMP FINAL
    116
    117					     ; GLOBAL VARIABLES
    118	01E3  0B			     CODE_NUMBER DB 11	     ; Codification number. We are team	8, so it is 8+3=11
    119	01E4  7E			     MAX_VALUE DB 126	     ; Maximum ASCII value we accept (~), in decimal
    120	01E5  20			     MIN_VALUE DB 32	     ; Minimum ASCII value we accept (space), in decimal
    121
    122	01E6				     CAESAR PROC FAR ; INTERRUPT SERVICE ROUTINE
    123						     ; SAVE MODIFIED REGISTERS
    124	01E6  56 53 50				     PUSH SI BX	AX
    125						     ; ROUTINE INSTRUCTIONS
    126						     ; We know the string is pointed by	DS:DX
    127	01E9  BE 0000				     MOV SI, 0		     ; Initialize the index
    128	01EC  8B DA				     MOV BX, DX
    129						     ; We have to check	AH
    130
    131
    132	01EE  80 FC 12				     CMP AH, 12h     ; Encrypt and print
    133	01F1  74 13				     JE	ENCRYPT
    134	01F3  80 FC 13				     CMP AH, 13h     ; Decrypt and print
    135	01F6  74 27				     JE	DECRYPT
    136	01F8  3D 2351				     CMP AX, 2351h   ; This is a secret	code that will be used to tell us if the    +
    137				     interruption is well installed or not
    138	01FB  74 03				     JE	FLAG
    139	01FD  EB 53 90				     JMP FIN
    140
    141	0200				     FLAG:
    142	0200  B9 0001				     MOV CX, 1 ; y would mean the interruption is installed.
    143											      ;	Its true it could be y originally a +
    144				     dont change, but we assume	this wont happen
    145											      ;	because	to access to this point	you +
    146				     have to know the code of the interrupt
    147											      ;	(AX must be 2351h,  that implies AH +
    148				     is	not 12h	or 13h)
    149	0203  EB 4D 90				     JMP FIN
    150
    151	0206				     ENCRYPT:
    152	0206  8A 00				     MOV AL, DS:[BX][SI]
    153	0208  3C 24				     CMP AL, '$'
    154	020A  74 42				     JE	PRINT
    155	020C  2E: 02 06	01E3r			     ADD AL, CODE_NUMBER
    156	0211  8A E0				     MOV AH, AL
    157	0213  2E: 2A 26	01E4r			     SUB AH, MAX_VALUE
    158	0218  7F 1E				     JG	OVERFLOW
    159	021A				     BACK_ENC:
    160	021A  88 00				     MOV DS:[BX][SI], AL
    161	021C  46				     INC SI
    162	021D  EB E7				     JMP ENCRYPT
    163
    164	021F				     DECRYPT:
    165	021F  8A 00				     MOV AL, DS:[BX][SI]
    166	0221  3C 24				     CMP AL, '$'
    167	0223  74 29				     JE	PRINT
    168	0225  2E: 2A 06	01E3r			     SUB AL, CODE_NUMBER
    169	022A  8A E0				     MOV AH, AL
    170	022C  2E: 2A 26	01E5r			     SUB AH, MIN_VALUE
    171	0231  7C 10				     JL	UNDERFLOW
Turbo Assembler	 Version 2.0	    04/30/18 03:32:54	    Page 4
p4a.asm



    172	0233				     BACK_DEC:
    173	0233  88 00				     MOV DS:[BX][SI], AL
    174	0235  46				     INC SI
    175	0236  EB E7				     JMP DECRYPT
    176
    177	0238				     OVERFLOW:
    178	0238  2E: 02 26	01E5r			     ADD AH, MIN_VALUE
    179	023D  FE CC				     DEC AH
    180	023F  8A C4				     MOV AL, AH
    181	0241  EB D7				     JMP BACK_ENC
    182
    183	0243				     UNDERFLOW:
    184	0243  2E: 02 26	01E4r			     ADD AH, MAX_VALUE
    185	0248  FE C4				     INC AH
    186	024A  8A C4				     MOV AL, AH
    187	024C  EB E5				     JMP BACK_DEC
    188
    189	024E				     PRINT:
    190
    191	024E  B4 09				     MOV AH, 09h
    192	0250  CD 21				     INT 21h		     ; Print the string	after processing it. Offset is	    +
    193				     already in	DX
    194
    195
    196						     ; RESTORE MODIFIED	REGISTERS
    197	0252				     FIN:
    198	0252  58 5B 5E				     POP AX BX SI
    199	0255  CF				     IRET
    200	0256				     CAESAR ENDP
    201
    202	0256				     INSTALLER PROC
    203	0256  B8 0000				     MOV AX, 0
    204	0259  8E C0				     MOV ES, AX
    205	025B  BB 01E6r				     MOV BX, OFFSET CAESAR
    206	025E  8C C8				     MOV AX, CS
    207	0260  FA				     CLI
    208						     ; We have to check	if there was a different driver	already	installed in that   +
    209				     position
    210	0261  26: 8B 3E	0154			     MOV DI, ES:[ 55h*4	]
    211	0266  26: 8B 36	0156			     MOV SI, ES:[ 55h*4	+2 ]
    212						     ; We first	check if there was no driver installed at all
    213	026B  83 FF 00				     CMP DI, 0
    214	026E  75 4D				     JNE OUR_DRIVER
    215	0270  83 FE 00				     CMP SI, 0
    216	0273  75 53				     JNE DRIVER_EXISTS
    217
    218	0275				     INSTALL:
    219	0275  26: 89 1E	0154			     MOV ES:[ 55h*4 ], BX
    220	027A  26: A3 0156			     MOV ES:[ 55h*4+2 ], AX
    221	027E  FB				     STI
    222	027F  BA 0256r				     MOV DX, OFFSET INSTALLER
    223	0282  CD 27				     INT 27H ; TERMINATE AND STAY RESIDENT
    224						     ; PSP, VARIABLES, CAESAR ROUTINE.
    225	0284				     INSTALLER ENDP
    226
    227
    228	0284				     UNINSTALLER PROC ;	UNINSTALL CAESAR OF INT	55H
Turbo Assembler	 Version 2.0	    04/30/18 03:32:54	    Page 5
p4a.asm



    229	0284  50 53 51 1E 06 57	56		     PUSH AX BX	CX DS ES DI SI
    230	028B  B9 0000				     MOV CX, 0
    231	028E  8E D9				     MOV DS, CX						     ; SEGMENT OF INTERRUPT +
    232				     VECTORS
    233	0290  8B 36 0156			     MOV SI, DS:[ 55h*4+2 ]		     ; READ CAESAR SEGMENT
    234	0294  8B 3E 0154			     MOV DI, DS:[ 55h*4	]		     ; READ CAESAR OFFSET
    235						     ; We first	check if there was no driver installed at all
    236	0298  83 FF 00				     CMP DI, 0
    237	029B  74 30				     JE	NO_DRIVER
    238
    239	029D				     UNINSTALL:
    240	029D  8E C6				     MOV ES, SI
    241	029F  26: 8B 1E	002C			     MOV BX, ES:[ 2Ch ]				     ; READ SEGMENT OF ENVIRONMENT  +
    242				     FROM CAESAR’S PSP.
    243	02A4  B4 49				     MOV AH, 49h
    244	02A6  CD 21				     INT 21h						     ; RELEASE CAESAR	    +
    245				     SEGMENT (ES)
    246	02A8  8E C3				     MOV ES, BX
    247	02AA  CD 21				     INT 21h						     ; RELEASE SEGMENT OF   +
    248				     ENVIRONMENT VARIABLES OF CAESAR
    249						     ; SET VECTOR OF INTERRUPT 55H TO ZERO
    250	02AC  FA				     CLI
    251	02AD  89 0E 0154			     MOV DS:[ 55H*4 ], CX		     ; CX = 0
    252	02B1  89 0E 0156			     MOV DS:[ 55H*4+2 ], CX
    253	02B5  FB				     STI
    254	02B6  5E 5F 07 1F 59 5B	58		     POP SI DI ES DS CX	BX AX
    255	02BD				     UNINSTALLER ENDP
    256
    257	02BD				     OUR_DRIVER:
    258						     ; We check	if the driver that was installed is exactly our	driver
    259	02BD  3B FB				     CMP DI, BX
    260	02BF  75 07				     JNE DRIVER_EXISTS
    261	02C1  3B F0				     CMP SI, AX
    262	02C3  75 03				     JNE DRIVER_EXISTS
    263						     ; AQUI SE IMPRIMIRIA EL MENSAJE DE	QUE YA ESTA INSTALADA NUESTRO DRIVER
    264	02C5  EB 0B 90				     JMP FINAL
    265
    266	02C8				     DRIVER_EXISTS:
    267
    268						     ; Aqui imprimimos pregunta	para ver si instalar o no encima de la otra
    269	02C8  EB AB				     JMP INSTALL
    270
    271	02CA  EB 06 90				     JMP FINAL
    272
    273	02CD				     NO_DRIVER:
    274	02CD  83 FE 00				     CMP SI, 0
    275	02D0  75 CB				     JNE UNINSTALL
    276						     ; AQUI SE IMPRIMIRIA EL MENSAJE DE	QUE NO HAY INSTALADO NADA ASI QUE NO	    +
    277				     DESINSTALAMOS
    278
    279
    280
    281	02D2				     FINAL:
    282						     ; NOT SURE	IF IT IS NECESSARY
    283	02D2  B8 4C00				     MOV AX, 4C00h
    284	02D5  CD 21				     INT 21h
    285
Turbo Assembler	 Version 2.0	    04/30/18 03:32:54	    Page 6
p4a.asm



    286				     ; END OF CODE SEGMENT
    287	02D7			     CODE ENDS
    288				     ; END OF PROGRAM. OBS: INCLUDES THE ENTRY OR THE FIRST PROCEDURE (i.e. “INICIO”)
    289				     END INICIO
Turbo Assembler	 Version 2.0	    04/30/18 03:32:54	    Page 7
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/30/18"
??FILENAME			  Text	 "p4a	  "
??TIME				  Text	 "03:32:54"
??VERSION			  Number 0200
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 P4A
@WORDSIZE			  Text	 2
AUTH				  Near	 CODE:01DB
AUTHORS				  Byte	 CODE:014A
AUXINSJUMP			  Near	 CODE:01B2
BACK_DEC			  Near	 CODE:0233
BACK_ENC			  Near	 CODE:021A
CAESAR				  Far	 CODE:01E6
CODE_NUMBER			  Byte	 CODE:01E3
DECRYPT				  Near	 CODE:021F
DRIVER_EXISTS			  Near	 CODE:02C8
ENCRYPT				  Near	 CODE:0206
ERROR				  Near	 CODE:01B5
FIN				  Near	 CODE:0252
FINAL				  Near	 CODE:02D2
FLAG				  Near	 CODE:0200
INICIO				  Near	 CODE:0100
INSTALL				  Near	 CODE:0275
INSTALLER			  Near	 CODE:0256
MAX_VALUE			  Byte	 CODE:01E4
MIN_VALUE			  Byte	 CODE:01E5
NO_DRIVER			  Near	 CODE:02CD
OUR_DRIVER			  Near	 CODE:02BD
OVERFLOW			  Near	 CODE:0238
PRINT				  Near	 CODE:024E
STATUS				  Near	 CODE:01B8
STATUSPRINT1			  Byte	 CODE:0100
STATUSPRINT2			  Byte	 CODE:0124
UNDERFLOW			  Near	 CODE:0243
UNINS				  Near	 CODE:01D4
UNINSTALL			  Near	 CODE:029D
UNINSTALLER			  Near	 CODE:0284

Groups & Segments		  Bit Size Align  Combine Class

CODE				  16  02D7 Para	  none
