Turbo Assembler	 Version 2.0	    04/30/18 18:52:16	    Page 1
p4a.asm



      1				     ;**************************************************************************
      2				     ; MICROPROCESSOR-BASED SYSTEMS
      3				     ; LAB SESSION 4
      4				     ; FILE: p4a.asm
      5				     ; AUTHORS:	Emilio Cuesta Fernandez	- Alejandro Sanchez Sanz
      6				     ; COUPLE NUMBER: 8
      7				     ; GROUP: 2351
      8				     ;**************************************************************************
      9
     10
     11
     12				     ;**************************************************************************
     13				     ; CODE SEGMENT DEFINITION
     14	0000			     CODE SEGMENT
     15					     ASSUME CS:	CODE
     16					     ; First assembly instruction must be after	the 256	bytes of PSP, so this is
     17					     ; necessary to generate a .COM file
     18					     ORG 256
     19
     20
     21				     ; BEGINNING OF THE	MAIN PROCEDURE
     22	0100			     INICIO:
     23					     ; Check input parameters
     24	0100  8A 0E 0080		     MOV CL, DS:[80h]	     ; Load the	size of	the parameters in the command line
     25					     ; No parameters
     26	0104  80 F9 00			     CMP CL, 0
     27	0107  E8 019F			     CALL STATUS
     28
     29					     ; If there	is a parameter,	it must	be 3 bytes long	(space + / + I or space	+ / + U)
     30	010A  80 F9 03			     CMP CL, 3
     31	010D  75 1C			     JNE ERROR
     32	010F  8B 0E 0082		     MOV CX, DS:[82h]
     33	0113  80 F9 2F			     CMP CL, '/'
     34	0116  75 13			     JNE ERROR
     35					     ; /I as parameter
     36	0118  80 FD 49			     CMP CH, 'I'
     37	011B  74 0B			     JE	AUXINSJUMP
     38					     ; /U as parameter
     39	011D  80 FD 55			     CMP CH, 'U'
     40	0120  75 09			     JNE ERROR
     41	0122  E8 0135			     CALL UNINSTALLER
     42	0125  E9 01B3			     JMP FINAL
     43
     44	0128			     AUXINSJUMP:
     45
     46	0128  E8 0101			     CALL INSTALLER
     47
     48					     ; Reaching	here means input parameters are	wrong
     49	012B			     ERROR:
     50					     ; Shows this message when there has been an error introducing the parameters
     51	012B  E9 01AD			     JMP FINAL
     52
     53					     ; Global Driver
     54	012E  54 68 65 20 64 72	69+	     STATUSPRINT1 DB "The driver is currently INSTALLED", 13, 10, '$'
     55	      76 65 72 20 69 73	20+
     56	      63 75 72 72 65 6E	74+
     57	      6C 79 20 49 4E 53	54+
Turbo Assembler	 Version 2.0	    04/30/18 18:52:16	    Page 2
p4a.asm



     58	      41 4C 4C 45 44 0D	0A+
     59	      24
     60	0152  54 68 65 20 64 72	69+	     STATUSPRINT2 DB "The driver is currently UNINSTALLED", 13,	10, '$'
     61	      76 65 72 20 69 73	20+
     62	      63 75 72 72 65 6E	74+
     63	      6C 79 20 55 4E 49	4E+
     64	      53 54 41 4C 4C 45	44+
     65	      0D 0A 24
     66	0178  41 55 54 48 4F 52	53+	     AUTHORS DB	"AUTHORS:", 13,	10, "GROUP 2351, TEAM 8", 13, 10, "Emilio Cuesta", 13, 10,  +
     67	      3A 0D 0A 47 52 4F	55+  "Alejandro	Sanchez", 13, 10 , '$'
     68	      50 20 32 33 35 31	2C+
     69	      20 54 45 41 4D 20	38+
     70	      0D 0A 45 6D 69 6C	69+
     71	      6F 20 43 75 65 73	74+
     72	      61 0D 0A 41 6C 65	6A+
     73	      61 6E 64 72 6F 20	53+
     74	      61 6E 63 68 65 7A	0D+
     75	      0A 24
     76					     ; GLOBAL VARIABLES
     77	01B9  0B			     CODE_NUMBER DB 11	     ; Codification number. We are team	8, so it is 8+3=11
     78	01BA  7E			     MAX_VALUE DB 126	     ; Maximum ASCII value we accept (~), in decimal
     79	01BB  20			     MIN_VALUE DB 32	     ; Minimum ASCII value we accept (space), in decimal
     80
     81	01BC				     CAESAR PROC FAR ; INTERRUPT SERVICE ROUTINE
     82						     ; SAVE MODIFIED REGISTERS
     83	01BC  56 53 50				     PUSH SI BX	AX
     84						     ; ROUTINE INSTRUCTIONS
     85						     ; We know the string is pointed by	DS:DX
     86	01BF  BE 0000				     MOV SI, 0		     ; Initialize the index
     87	01C2  8B DA				     MOV BX, DX
     88						     ; We have to check	AH
     89
     90
     91	01C4  80 FC 12				     CMP AH, 12h     ; Encrypt and print
     92	01C7  74 13				     JE	ENCRYPT
     93	01C9  80 FC 13				     CMP AH, 13h     ; Decrypt and print
     94	01CC  74 27				     JE	DECRYPT
     95	01CE  3D 2351				     CMP AX, 2351h   ; This is a secret	code that will be used to tell us if the    +
     96				     interruption is well installed or not
     97	01D1  74 03				     JE	FLAG
     98	01D3  EB 53 90				     JMP FIN
     99
    100	01D6				     FLAG:
    101	01D6  B9 0001				     MOV CX, 1 ; y would mean the interruption is installed.
    102											      ;	Its true it could be y originally a +
    103				     dont change, but we assume	this wont happen
    104											      ;	because	to access to this point	you +
    105				     have to know the code of the interrupt
    106											      ;	(AX must be 2351h,  that implies AH +
    107				     is	not 12h	or 13h)
    108	01D9  EB 4D 90				     JMP FIN
    109
    110	01DC				     ENCRYPT:
    111	01DC  8A 00				     MOV AL, DS:[BX][SI]
    112	01DE  3C 24				     CMP AL, '$'
    113	01E0  74 42				     JE	PRINT
    114	01E2  2E: 02 06	01B9r			     ADD AL, CODE_NUMBER
Turbo Assembler	 Version 2.0	    04/30/18 18:52:16	    Page 3
p4a.asm



    115	01E7  8A E0				     MOV AH, AL
    116	01E9  2E: 2A 26	01BAr			     SUB AH, MAX_VALUE
    117	01EE  7F 1E				     JG	OVERFLOW
    118	01F0				     BACK_ENC:
    119	01F0  88 00				     MOV DS:[BX][SI], AL
    120	01F2  46				     INC SI
    121	01F3  EB E7				     JMP ENCRYPT
    122
    123	01F5				     DECRYPT:
    124	01F5  8A 00				     MOV AL, DS:[BX][SI]
    125	01F7  3C 24				     CMP AL, '$'
    126	01F9  74 29				     JE	PRINT
    127	01FB  2E: 2A 06	01B9r			     SUB AL, CODE_NUMBER
    128	0200  8A E0				     MOV AH, AL
    129	0202  2E: 2A 26	01BBr			     SUB AH, MIN_VALUE
    130	0207  7C 10				     JL	UNDERFLOW
    131	0209				     BACK_DEC:
    132	0209  88 00				     MOV DS:[BX][SI], AL
    133	020B  46				     INC SI
    134	020C  EB E7				     JMP DECRYPT
    135
    136	020E				     OVERFLOW:
    137	020E  2E: 02 26	01BBr			     ADD AH, MIN_VALUE
    138	0213  FE CC				     DEC AH
    139	0215  8A C4				     MOV AL, AH
    140	0217  EB D7				     JMP BACK_ENC
    141
    142	0219				     UNDERFLOW:
    143	0219  2E: 02 26	01BAr			     ADD AH, MAX_VALUE
    144	021E  FE C4				     INC AH
    145	0220  8A C4				     MOV AL, AH
    146	0222  EB E5				     JMP BACK_DEC
    147
    148	0224				     PRINT:
    149
    150	0224  B4 09				     MOV AH, 09h
    151	0226  CD 21				     INT 21h		     ; Print the string	after processing it. Offset is	    +
    152				     already in	DX
    153
    154						     ; RESTORE MODIFIED	REGISTERS
    155	0228				     FIN:
    156	0228  58 5B 5E				     POP AX BX SI
    157	022B  CF				     IRET
    158	022C				     CAESAR ENDP
    159
    160	022C				     INSTALLER PROC
    161	022C  B8 0000				     MOV AX, 0
    162	022F  8E C0				     MOV ES, AX
    163	0231  BB 01BCr				     MOV BX, OFFSET CAESAR
    164	0234  8C C8				     MOV AX, CS
    165	0236  FA				     CLI
    166						     ; We have to check	if there was a different driver	already	installed in that   +
    167				     position
    168	0237  26: 8B 3E	0154			     MOV DI, ES:[ 55h*4	]
    169	023C  26: 8B 36	0156			     MOV SI, ES:[ 55h*4	+2 ]
    170						     ; We first	check if there was no driver installed at all
    171	0241  83 FF 00				     CMP DI, 0
Turbo Assembler	 Version 2.0	    04/30/18 18:52:16	    Page 4
p4a.asm



    172	0244  75 4E				     JNE OUR_DRIVER
    173	0246  83 FE 00				     CMP SI, 0
    174	0249  75 54				     JNE DRIVER_EXISTS
    175
    176	024B				     INSTALL:
    177	024B  26: 89 1E	0154			     MOV ES:[ 55h*4 ], BX
    178	0250  26: A3 0156			     MOV ES:[ 55h*4+2 ], AX
    179	0254  FB				     STI
    180	0255  BA 022Cr				     MOV DX, OFFSET INSTALLER
    181	0258  CD 27				     INT 27H ; TERMINATE AND STAY RESIDENT
    182						     ; PSP, VARIABLES, CAESAR ROUTINE.
    183	025A				     INSTALLER ENDP
    184
    185
    186	025A				     UNINSTALLER PROC ;	UNINSTALL CAESAR OF INT	55H
    187	025A  50 53 51 1E 06 57	56		     PUSH AX BX	CX DS ES DI SI
    188	0261  B9 0000				     MOV CX, 0
    189	0264  8E D9				     MOV DS, CX						     ; SEGMENT OF INTERRUPT +
    190				     VECTORS
    191	0266  8B 36 0156			     MOV SI, DS:[ 55h*4+2 ]		     ; READ CAESAR SEGMENT
    192	026A  8B 3E 0154			     MOV DI, DS:[ 55h*4	]		     ; READ CAESAR OFFSET
    193						     ; We first	check if there was no driver installed at all
    194	026E  83 FF 00				     CMP DI, 0
    195	0271  74 31				     JE	NO_DRIVER
    196
    197	0273				     UNINSTALL:
    198	0273  8E C6				     MOV ES, SI
    199	0275  26: 8B 1E	002C			     MOV BX, ES:[ 2Ch ]				     ; READ SEGMENT OF ENVIRONMENT  +
    200				     FROM CAESAR’S PSP.
    201	027A  B4 49				     MOV AH, 49h
    202	027C  CD 21				     INT 21h						     ; RELEASE CAESAR	    +
    203				     SEGMENT (ES)
    204	027E  8E C3				     MOV ES, BX
    205	0280  CD 21				     INT 21h						     ; RELEASE SEGMENT OF   +
    206				     ENVIRONMENT VARIABLES OF CAESAR
    207						     ; SET VECTOR OF INTERRUPT 55H TO ZERO
    208	0282  FA				     CLI
    209	0283  89 0E 0154			     MOV DS:[ 55H*4 ], CX		     ; CX = 0
    210	0287  89 0E 0156			     MOV DS:[ 55H*4+2 ], CX
    211	028B  FB				     STI
    212	028C  5E 5F 07 1F 59 5B	58		     POP SI DI ES DS CX	BX AX
    213	0293  C3				     RET
    214	0294				     UNINSTALLER ENDP
    215
    216	0294				     OUR_DRIVER:
    217						     ; We check	if the driver that was installed is exactly our	driver
    218	0294  3B FB				     CMP DI, BX
    219	0296  75 07				     JNE DRIVER_EXISTS
    220	0298  3B F0				     CMP SI, AX
    221	029A  75 03				     JNE DRIVER_EXISTS
    222						     ; AQUI SE IMPRIMIRIA EL MENSAJE DE	QUE YA ESTA INSTALADA NUESTRO DRIVER
    223	029C  EB 3D 90				     JMP FINAL
    224
    225	029F				     DRIVER_EXISTS:
    226
    227						     ; Aqui imprimimos pregunta	para ver si instalar o no encima de la otra
    228	029F  EB AA				     JMP INSTALL
Turbo Assembler	 Version 2.0	    04/30/18 18:52:16	    Page 5
p4a.asm



    229
    230	02A1  EB 38 90				     JMP FINAL
    231
    232	02A4				     NO_DRIVER:
    233	02A4  83 FE 00				     CMP SI, 0
    234	02A7  75 CA				     JNE UNINSTALL
    235						     ; AQUI SE IMPRIMIRIA EL MENSAJE DE	QUE NO HAY INSTALADO NADA ASI QUE NO	    +
    236				     DESINSTALAMOS
    237
    238	02A9				     STATUS PROC
    239
    240
    241	02A9  B8 0000				     MOV AX, 0
    242	02AC  8E C0				     MOV ES, AX
    243						     ;;PUSH DS
    244
    245
    246	02AE  B4 09				     MOV AH, 9
    247	02B0  B0 00				     MOV AL, 0
    248	02B2  BA 0178r				     MOV DX, OFFSET AUTHORS
    249	02B5  CD 21				     INT 21H
    250
    251	02B7  B9 0000				     MOV CX, 0
    252	02BA  B8 2351				     MOV AX, 2351h
    253	02BD  CD 55				     INT 55h
    254						     ;;POP DS
    255
    256	02BF  83 F9 01				     CMP CX, 1
    257	02C2  75 0A				     JNE UNINS
    258
    259
    260	02C4  BA 012Er				     MOV DX, OFFSET STATUSPRINT1
    261	02C7  B4 09				     MOV AH, 9
    262	02C9  CD 21				     INT 21H
    263	02CB  EB 08 90				     JMP AUTH
    264
    265	02CE				     UNINS:
    266
    267	02CE  BA 0152r				     MOV DX, OFFSET STATUSPRINT2
    268	02D1  B4 09				     MOV AH, 9
    269	02D3  CD 21				     INT 21H
    270
    271	02D5				     AUTH:
    272
    273	02D5  BA 0178r				     MOV DX, OFFSET AUTHORS
    274	02D8  CD 21				     INT 21H
    275	02DA  C3				     RET
    276
    277	02DB				     STATUS ENDP
    278
    279
    280	02DB				     FINAL:
    281						     ; NOT SURE	IF IT IS NECESSARY
    282	02DB  B8 4C00				     MOV AX, 4C00h
    283	02DE  CD 21				     INT 21h
    284
    285				     ; END OF CODE SEGMENT
Turbo Assembler	 Version 2.0	    04/30/18 18:52:16	    Page 6
p4a.asm



    286	02E0			     CODE ENDS
    287				     ; END OF PROGRAM. OBS: INCLUDES THE ENTRY OR THE FIRST PROCEDURE (i.e. “INICIO”)
    288				     END INICIO
Turbo Assembler	 Version 2.0	    04/30/18 18:52:16	    Page 7
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/30/18"
??FILENAME			  Text	 "p4a	  "
??TIME				  Text	 "18:52:16"
??VERSION			  Number 0200
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 P4A
@WORDSIZE			  Text	 2
AUTH				  Near	 CODE:02D5
AUTHORS				  Byte	 CODE:0178
AUXINSJUMP			  Near	 CODE:0128
BACK_DEC			  Near	 CODE:0209
BACK_ENC			  Near	 CODE:01F0
CAESAR				  Far	 CODE:01BC
CODE_NUMBER			  Byte	 CODE:01B9
DECRYPT				  Near	 CODE:01F5
DRIVER_EXISTS			  Near	 CODE:029F
ENCRYPT				  Near	 CODE:01DC
ERROR				  Near	 CODE:012B
FIN				  Near	 CODE:0228
FINAL				  Near	 CODE:02DB
FLAG				  Near	 CODE:01D6
INICIO				  Near	 CODE:0100
INSTALL				  Near	 CODE:024B
INSTALLER			  Near	 CODE:022C
MAX_VALUE			  Byte	 CODE:01BA
MIN_VALUE			  Byte	 CODE:01BB
NO_DRIVER			  Near	 CODE:02A4
OUR_DRIVER			  Near	 CODE:0294
OVERFLOW			  Near	 CODE:020E
PRINT				  Near	 CODE:0224
STATUS				  Near	 CODE:02A9
STATUSPRINT1			  Byte	 CODE:012E
STATUSPRINT2			  Byte	 CODE:0152
UNDERFLOW			  Near	 CODE:0219
UNINS				  Near	 CODE:02CE
UNINSTALL			  Near	 CODE:0273
UNINSTALLER			  Near	 CODE:025A

Groups & Segments		  Bit Size Align  Combine Class

CODE				  16  02E0 Para	  none
