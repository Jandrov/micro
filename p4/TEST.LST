Turbo Assembler	 Version 2.0	    04/27/18 17:29:27	    Page 1
test.asm



      1				     ;**************************************************************************
      2				     ; MICROPROCESSOR-BASED SYSTEMS
      3				     ; LAB SESSION 2
      4				     ; FILE: labs2b.asm
      5				     ; AUTHORS:	Emilio Cuesta Fernandez	- Alejandro Sanchez Sanz
      6				     ; COUPLE NUMBER: 8
      7				     ; GROUP: 2351
      8				     ;**************************************************************************
      9
     10				     ; DATA SEGMENT DEFINITION
     11	0000			     DATOS SEGMENT
     12
     13
     14	0000  24 24 24 2F 2F 2F	2F+	 TESTTEST DB "$$$////IIIIIUUUU"
     15	      49 49 49 49 49 55	55+
     16	      55 55
     17
     18					 ; Variable used to print an error message
     19
     20	0010			     DATOS ENDS
     21				     ;**************************************************************************
     22				     ; STACK SEGMENT DEFINITION
     23	0000			     PILA SEGMENT STACK	"STACK"
     24	0000  40*(00)			     DB	40h DUP	(0) ; initialization example, 64 bytes set to 0
     25	0040			     PILA ENDS
     26
     27
     28				     ;**************************************************************************
     29				     ; CODE SEGMENT DEFINITION
     30	0000			     CODE SEGMENT
     31				     ASSUME CS:	CODE, DS: DATOS, SS: PILA
     32				     ; BEGINNING OF THE	MAIN PROCEDURE
     33	0000			     INICIO PROC
     34					     ; INITIALIZE THE SEGMENT REGISTERS
     35	0000  B8 0000s			     MOV AX, DATOS
     36	0003  8E D8			     MOV DS, AX
     37
     38					     ; PROGRAM START
     39	0005  A0 0000r			     mov AL, TESTTEST[0]
     40	0008  3C 24			     cmp AL, '$'
     41	000A  75 03			     jne FALLO
     42	000C  EB 07 90			     jmp ACIERTO
     43
     44	000F			     FALLO:
     45	000F  BA FFFF			     mov DX, 0FFFFh
     46	0012  EB 04 90			     jmp JEND
     47
     48	0015			     ACIERTO:
     49
     50	0015  BA 0000			     mov DX, 0000h
     51
     52
     53					     ; PROGRAM END
     54	0018			     JEND:
     55	0018  B8 4C00			 MOV AX, 4C00h
     56	001B  CD 21			     INT 21h
     57	001D			     INICIO ENDP
Turbo Assembler	 Version 2.0	    04/27/18 17:29:27	    Page 2
test.asm



     58
     59				     ; We implement the	function to compute the	parity bits in an automatic way
     60
     61
     62				     ; END OF CODE SEGMENT
     63	001D			     CODE ENDS
     64				     ; END OF PROGRAM. OBS: INCLUDES THE ENTRY FOR THE FIRST PROCEDURE (i.e. “INICIO”)
     65				     END INICIO
Turbo Assembler	 Version 2.0	    04/27/18 17:29:27	    Page 3
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "04/27/18"
??FILENAME			  Text	 "test	  "
??TIME				  Text	 "17:29:27"
??VERSION			  Number 0200
@CPU				  Text	 0101H
@CURSEG				  Text	 CODE
@FILENAME			  Text	 TEST
@WORDSIZE			  Text	 2
ACIERTO				  Near	 CODE:0015
FALLO				  Near	 CODE:000F
INICIO				  Near	 CODE:0000
JEND				  Near	 CODE:0018
TESTTEST			  Byte	 DATOS:0000

Groups & Segments		  Bit Size Align  Combine Class

CODE				  16  001D Para	  none
DATOS				  16  0010 Para	  none
PILA				  16  0040 Para	  Stack	  STACK
